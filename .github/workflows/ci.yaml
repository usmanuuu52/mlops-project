name: CI pipeline
on: push

jobs:
  project-testing:
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
        
      - name: install dependencies
        run: |
          pip install -r requirements.txt

      - name: run pipeline
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: |
          dvc repro

      - name: Run model tests
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: |
          python -m unittest tests/test_model.py

      - name: Promote model to production
        if: success()
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: python scripts/promote_model.py

      - name: Run Flask app tests
        if: success()
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: python -m unittest tests/test_flask_app.py

      - name: login to docker
        if: success()
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build docker image
        if: success()
        run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/emotion2:latest .

      - name: push docker image to docker hub
        if: success()
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/emotion2:latest

      - name: Deploy to EC2
        if: success()
        uses: appleboy/ssh-action@v0.1.8
        with:
        host: ${{ secrets.EC2_HOST }}
        user: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          echo "Pulling the latest Docker image..."
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/emotion2:latest
          echo "Stopping the current container if it exists..."
          docker stop my-app || true
          docker rm my-app || true
          echo "Starting a new container..."
          docker run -p 80:5000 --name my-app \
            -e DAGSHUB_PAT=${{ secrets.DAGSHUB_PAT }} \
            ${{ secrets.DOCKER_HUB_USERNAME }}/emotion2:latest
          echo "Deployment to EC2 complete."
